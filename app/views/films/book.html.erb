<style type="text/css">
div.seatCharts-container {
	width: 947px;
}
div.seatCharts-cell {

	height: 1.9rem;
	width: 1.9rem;
	margin: 3px;
	float: left;
	text-align: center;
	outline: none;
	padding-top: 5px;
	font-size: 20px;
	line-height:16px;
	color: black;

}
div.seatCharts-seat {
	background-color: green;
	color: white;
	-webkit-border-radius: 5px;
	-moz-border-radius: 5px;
	border-radius: 5px;
	cursor: default;
}
div.seatCharts-seat:focus {
	border: none;
}
/*
.seatCharts-seat:focus {
	outline: none;
}
*/

div.seatCharts-space {
	background-color: #eeeeee;
}
div.seatCharts-row {
	height: 50px;
}

div.seatCharts-row:after {
	clear: both;
}

div.seatCharts-seat.selected {
	background-color: #209cee;
}

div.seatCharts-seat.focused {
	background-color: #6db131;
}

div.seatCharts-seat.available {
	background-color: green;
}

div.seatCharts-seat.unavailable {
	background-color: rgba(0, 0, 0, 0.1);
	cursor: not-allowed;
}

ul.seatCharts-legendList {
	list-style: none;
}
li.seatCharts-legendItem {
	margin-top: 10px;
	line-height: 2;
}
.front{    
	width: 912px;
	margin: 0px 32px 45px 32px;
    background-color: #cdcdcd;
    color: #1c1c1c;
    text-align: center;
    padding: 0;
    border-radius: 5px;
} 


</style>
<div class="hidden" id="sessionId"><%= @session_id %></div>
<div class="wrapper">
  <div class="container">
    <div id="seat-map">
      <div class="front"><h1 style="font-size: 2rem;">Екран</h1></div>
    </div>
    <div class="booking-details" style="text-align: center;">
      <h3> Вибрано місць <span id="counter">0</span>.</h3>
      <ul id="selected-seats">
      	
      </ul>
      Всього до сплати: <b><span id="total">0</span>грн.</b>
      <br>
      <button id="bookSeats" class="checkout-button">Checkout &raquo;</button>
      <div id="legend"></div>
    </div>
  </div>
</div>

<script> 
	$(document).ready(function() {
		var $cart = $('#selected-seats'),
			$counter = $('#counter'),
			$total = $('#total'),
			sessionId = $('#sessionId').text();
			sc = $('#seat-map').seatCharts({
			map: [
				'_____aaaaaaaaaaaaaaa_____',
				'_aaaaaaaaaaaaaaaaaaaaaaa_',
				'_aaaaaaaaaaaaaaaaaaaaaaa_',
				'_aaaaaaaaaaaaaaaaaaaaaaa_',
				'_aaaaaaaaaaaaaaaaaaaaaaa_',
				'_aaaaaaaaaaaaaaaaaaaaaaa_',
				'_aaaaaaaaaaaaaaaaaaaaaaa_',
				'_aaaaaaaaaaaaaaaaaaaaaaa_',
				'_aaaaaaaaaaaaaaaaaaaaaaa_',
				'aaaaaaaaaaaaaaaaaaaaaaaaa'
			],
			seats: {
				a: {
					price   : getPrice(),
					classes : '', //your custom CSS class
					category: ''
				}
			
			},
			naming : {
				top : false,
				getId  : function(character, row, column) {
						     if (row == 1) return row + '_' + (column - 5);
							 if (row < 10) return row + '_' + (column - 1);
						     else return row + '_' + column;
						 },
				getLabel : function (character, row, column) {
					if (row == 1) return column - 5;
					if (row < 10) return column - 1;
					else return column;
				},
			},
			legend : {
				node : $('13231'),
			    items : [
					[ 'a', 'available',   'Option' ],
					[ 'a', 'unavailable', 'Already Booked']
			    ]					
			},
			click: function () {
				if (this.status() == 'available') {
					//let's create a new <li> which we'll add to the cart items
				/*	$('<li>'+this.data().category+' Місце № '+this.settings.label+': <b>'+this.data().price+'грн.</b> <a href="#" class="cancel-cart-item">[cancel]</a></li>')
						.attr('id', 'cart-item-'+this.settings.id)
						.data('seatId', this.settings.id)
						.appendTo($cart);
				*/	
					/*
					 * Lets update the counter and total
					 *
					 * .find function will not find the current seat, because it will change its stauts only after return
					 * 'selected'. This is why we have to add 1 to the length and the current seat price to the total.
					 */
					$counter.text(sc.find('selected').length+1);
					$total.text(recalculateTotal(sc)+this.data().price);
					
					return 'selected';
				} else if (this.status() == 'selected') {
					//update the counter
					$counter.text(sc.find('selected').length-1);
					//and total
					$total.text(recalculateTotal(sc)-this.data().price);
				
					//remove the item from our cart
					$('#cart-item-'+this.settings.id).remove();
				
					//seat has been vacated
					return 'available';
				} else if (this.status() == 'unavailable') {
					//seat has been already booked
					return 'unavailable';
				} else {
					return this.style();
				}
			}
		});

		//this will handle "[cancel]" link clicks
		$('#selected-seats').on('click', '.cancel-cart-item', function () {
			//let's just trigger Click event on the appropriate seat, so we don't have to repeat the logic here
			sc.get($(this).parents('li:first').data('seatId')).click();
		});
		$('#bookSeats').click(function (e) {
        	bookSeats(sc);
    	});
    	
    	$.getJSON("/api/sessions/" + sessionId, function (result) {
	        try{
	            $.each(result.bookedSeats, function (index, value) {
	                sc.get([value]).status('unavailable');
	            });
	        }
	        catch (exception) {
	            console.log("Could not find any booked seats..")
	        }
	    });

		//let's pretend some seats have already been booked
		sc.get(['1_2', '4_1', '7_1', '7_2']).status('unavailable');

});
function getPrice() {
	var now = new Date();
	if (now.getDay() !== 0 || now.getDay() !== 6) return now.getHours() < 18 ? 70 : 80;
	else  return now.getHours() < 18 ? 90 : 100;
}
function recalculateTotal(sc) {
	var total = 0;

	//basically find every selected seat and sum its price
	sc.find('selected').each(function () {
		total += this.data().price;
	});
	
	return total;
}


function bookSeats(sc) {

    var seats = new Array();

    sc.find('selected').each(function (selected) {

        seats.push(this.settings.id)

    });

    var jsonSeats = JSON.stringify(seats);

    var sessionId = $('#sessionId').text();

    post('/Cart/AddSeats/', { id: sessionId, seats: jsonSeats });

}
		
</script>